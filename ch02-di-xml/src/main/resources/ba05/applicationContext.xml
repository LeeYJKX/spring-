<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


    <!--引用类型的自动注入:spring框架根据某些规则可以给引用类型赋值。（只能引用类型）,不用你在给引用类型赋值了
    使用规则常用的是byName,byType
    1.byName:（按名称注入）:java类中引用类型的属性名和spring容器中（配置文件）<bean>的id名称一样
                         且数据类型是一致的，这样的容器中的bean,spring能够赋值给引用类型。
      语法规则:
      <bean id="xxx" class="yyy" autowire="byName">
        简单类型属性赋值
      </bean>

    2.byType(按类型注入):java类中引用类型的数据类型和spring容器中(配置文件)<bean>的class属性是同源关系的，这样的bean能够赋值给引用类型
      同源就是一类的意思:
      1.java类中引用类型的数据类型和class的值是一样的。
      2.java类中引用类型的数据类型和bean的class的值父子类关系的。
      3.java类中引用类型的数据类型和bean的class的值接口和实现类关系的。

      语法规则:
      <bean id="xxx" class="yyy" autowire="byType">
        简单类型属性赋值
      </bean>

      只能有一个bean符合条件，多于一个报错
    -->
    <!--byType-->
    <bean id="myStudent" class="com.bit.ba05.Student" autowire="byType"> <!--*****Student的学校属性的数据类型是School******-->
        <property name="name" value="张卡"/>
        <property name="age"  value="20"/>
    </bean>
    <!--同源关系第一种-->
<!--    <bean id="mySchool" class="com.bit.ba05.School">
        <property name="name" value="人民大学"/>
        <property name="address" value="海淀区"/>
    </bean>-->

    <!--声明一个School的子类-->
    <bean id="primarySchool" class="com.bit.ba05.PrimarySchool" autowire="byType"><!--同源关系第二种-->
        <property name="name" value="北京小学"/>
        <property name="address" value="大兴区"/>
    </bean>

</beans>